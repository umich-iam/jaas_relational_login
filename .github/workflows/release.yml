name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers the workflow on version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Extract Tag Name
      id: extract_tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Check if Release Exists
      id: check_release
      uses: actions/github-script@v3
      with:
        script: |
          const { data: releases } = await github.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const release = releases.find(release => release.tag_name === process.env.TAG_NAME);
          return release ? release.id : null;

    - name: Create or Update Release
      id: create_update_release
      uses: actions/github-script@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const release_id = ${{ steps.check_release.outputs.result }};
          if (release_id) {
            // Update existing release
            await github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release_id,
              tag_name: process.env.TAG_NAME,
              name: `Release ${process.env.TAG_NAME}`,
              draft: false,
              prerelease: false
            });
          } else {
            // Create new release
            await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.TAG_NAME,
              name: `Release ${process.env.TAG_NAME}`,
              draft: false,
              prerelease: false
            });
          }
          
    - name: Upload JAR file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/jaas_relational_login-${{ env.TAG_NAME }}.jar
        asset_name: jaas_relational_login-${{ env.TAG_NAME }}.jar
        asset_content_type: application/java-archive
